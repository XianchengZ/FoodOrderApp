{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzang/programming/JavaScript/projects/React/foodOrderApp_/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const upDatedTotalAmount = state.totalAmount + action.item.price * action.item.totalAmount;\n    return {\n      items: updatedItems,\n      totalAmount: upDatedTotalAmount\n    };\n  } // else if (action.type === 'REMOVE') {\n  // }\n\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/andrewzang/programming/JavaScript/projects/React/foodOrderApp_/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","upDatedTotalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYP,WAA/E;AACA,WAAO;AACHD,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH,GARkC,CAQlC;AAED;;;AACA,SAAOV,gBAAP;AAEH,CAbD;;AAeA,MAAMY,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkChB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMgB,oBAAoB,GAAIP,IAAD,IAAU;AACnCM,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMQ,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACT,MAAAA,IAAI,EAAE,QAAP;AAAiBY,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AAEH,GAHD;;AAMA,QAAMC,WAAW,GAAG;AAChBlB,IAAAA,KAAK,EAAEa,SAAS,CAACb,KADD;AAEhBC,IAAAA,WAAW,EAAEY,SAAS,CAACZ,WAFP;AAGhBkB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFN,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAvBD;;GAAMV,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import CartContext from './cart-context';\nimport { useReducer } from 'react';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const updatedItems = state.items.concat(action.item);\n        const upDatedTotalAmount = state.totalAmount + action.item.price * action.item.totalAmount;\n        return {\n            items: updatedItems,\n            totalAmount: upDatedTotalAmount\n        };\n    }// else if (action.type === 'REMOVE') {\n\n    // }\n    return defaultCartState;\n    \n};\n\nconst CartProvider = props => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({type: 'ADD', item: item});\n    };\n\n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({type: 'REMOVE', id: id});\n        \n    };\n\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}